---
- name: install essential packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - python3-pip
    - virtualenv
    - build-essential
    - libssl-dev
    - libffi-dev
    - git

- name: create group - "{{ service_user }}"
  group:
    name: "{{ service_user }}"
    system: yes

- name: create service user - "{{ service_user }}"
  user:
    name: "{{ service_user }}"
    group: "{{ service_user }}"
    create_home: yes
    home: "{{ server_path }}"
    system: yes

- name: clone ctfd repository
  become_user: "{{ service_user }}"
  git:
    repo: "{{ ctfd_repo }}"
    dest: "{{ server_app_path }}"
    version: "{{ ctfd_version }}"
    update: no

- name: copy enviroment file
  template:
    src: env.j2
    dest: "{{ enviroment_file_path }}"
    mode: 0600
    owner: "{{ service_user }}"
    group: "{{ service_user }}"

- name: create venv with upgraded pip
  become_user: "{{ service_user }}"
  pip:
    name: pip
    chdir: "{{ venv_path }}"
    virtualenv: "{{ venv_name }}"
    virtualenv_python: python3

- name: install requirements
  become_user: "{{ service_user }}"
  pip:
    chdir: "{{ venv_path }}"
    virtualenv: "{{ venv_name }}"
    virtualenv_python: python3
    requirements: "{{ server_app_path }}/requirements.txt"

- name: install additional packages
  become_user: "{{ service_user }}"
  pip:
    chdir: "{{ venv_path }}"
    virtualenv: "{{ venv_name }}"
    virtualenv_python: python3
    name: "{{ item }}"
  loop:
     - uwsgi
     - psycopg2

- name: copy uwsgi config
  become_user: "{{ service_user }}"
  template:
    src: ctfd.ini.j2
    dest: "{{ uwsgi_config_path }}"

- name: copy systemd unit file
  template:
    src: ctfd-server.service.j2
    dest: /etc/systemd/system/ctfd-server.service
  notify: restart ctfd-server

- name: start ctfd server
  service:
    name: ctfd-server
    state: started
    enabled: yes